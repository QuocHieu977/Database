create table Categories(
	category_id int PRIMARY KEY,
    category_name text
);

create table Products(
	product_id int PRIMARY KEY,
    product_name text,
    category_id int,
    price double,
    FOREIGN KEY(category_id) REFERENCES Categories(category_id)
);

create table Customers(
	customer_id int PRIMARY KEY,
    customer_name text,
    email text
);

create table Orders(
	order_id int PRIMARY KEY,
    customer_id int,
    order_date date,
    FOREIGN KEY(customer_id) REFERENCES Customers(customer_id)
);

create table OrderDetails(
	order_detail_id int PRIMARY KEY,
    order_id int,
    product_id int,
    quantity int,
	FOREIGN KEY(order_id) REFERENCES Orders(order_id),
	FOREIGN KEY(product_id) REFERENCES Products(product_id)
);

--insert into Categories
--values(1, 'dien thoai'),
--(2, 'laptop'),
--(3, 'ipad');
--
--insert into Products
--values(1, 'iphone 15', 1, 1000),
--(2, 'macbook pro m1', 2, 4000),
--(3, 'iphone 15 prm', 1, 3000),
--(4, 'ipad pro 14', 3, 3500);
--
--insert into Customers
--values (1, 'khach hang 1', 'kh1@gmail.com'),
--(2, 'khach hang 2', 'kh2@gmail.com'),
--(3, 'khach hang 3', 'kh3@gmail.com');
--
--insert into Orders
--values(1, 3, '2024-07-05'),
--(2, 1, '2024-07-01'),
--(3, 2, '2024-07-03'),
--(4, 1, '2024-07-04');
--
--insert into OrderDetails
--values
--(1, 2, 1, 10),
--(2, 4, 3, 10),
--(3, 3, 2, 10),
--(4, 2, 1, 20);

-- 1
select * from OrderDetails
inner join Orders on Orders.order_id = OrderDetails.order_id
inner join Products on Products.product_id = OrderDetails.product_id
inner join Customers on Customers.customer_id = Orders.customer_id;

-- 2
select *, sum(Products.price * OrderDetails.quantity) as total_price from OrderDetails
inner join Orders on Orders.order_id = OrderDetails.order_id
inner join Products on Products.product_id = OrderDetails.product_id
inner join Customers on Customers.customer_id = Orders.customer_id
where order_detail_id = 1;

-- 3
select * from Products
left join OrderDetails on Products.product_id = OrderDetails.product_id
where OrderDetails.order_detail_id is null;

select * from Products
where product_id not in(
	select product_id from OrderDetails
);

-- 4
select category_name, count(Categories.category_id) as total_product  from Categories
inner join Products on Products.category_id = Categories.category_id
group by category_name;

-- 5
select customer_name, count(Orders.order_id) as total_ordered from Customers
inner join Orders on Customers.customer_id = Orders.customer_id
group by customer_name;

-- 6
select category_name, count(Products.product_id) as product_count from Categories
inner join Products on Categories.category_id = Products.category_id
group by category_name
order by product_count desc
limit 1;

-- 7
select category_name, sum(OrderDetails.quantity) from OrderDetails
inner join Orders on Orders.order_id = OrderDetails.order_id
inner join Products on Products.product_id = OrderDetails.product_id
inner join Categories on Products.category_id = Categories.category_id
group by category_name;

-- 8
select Customers.customer_id, Customers.customer_name, sum(OrderDetails.quantity) as total_ordered from OrderDetails
inner join Orders on Orders.order_id = OrderDetails.order_id
inner join Products on Products.product_id = OrderDetails.product_id
inner join Customers on Customers.customer_id = Orders.customer_id
group by customer_id, customer_name
order by total_ordered desc
limit 3;

-- 9
select Customers.customer_id, Customers.customer_name,  sum(OrderDetails.quantity) as total_ordered, count(Orders.order_id) as number_orders from OrderDetails
inner join Orders on Orders.order_id = OrderDetails.order_id
inner join Products on Products.product_id = OrderDetails.product_id
inner join Customers on Customers.customer_id = Orders.customer_id
where Orders.order_date between '2024-07-01' and '2024-07-03'
group by customer_id, customer_name
having number_orders > 1;

-- 10
select Products.product_id, Products.product_name, sum(OrderDetails.quantity) as total_ordered from OrderDetails
inner join Orders on Orders.order_id = OrderDetails.order_id
inner join Products on Products.product_id = OrderDetails.product_id
inner join Customers on Customers.customer_id = Orders.customer_id
group by product_id, product_name
order by total_ordered desc
limit 1;
